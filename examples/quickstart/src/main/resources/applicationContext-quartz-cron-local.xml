<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"
	default-lazy-init="true">

	<description>Quartz的本地Cron式执行任务配置</description>

	<!-- Quartz本地Schduler -->
	<bean id="localQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!-- Triggers集成 -->
		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
			</list>
		</property>
		<!-- Quartz配置, 本地运行无需单独的quartz.properties文件，在此简单配置即可 -->
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.threadCount">5</prop>
			</props>
		</property>
		<!-- 启动时延期2秒开始任务 -->
		<property name="startupDelay" value="2" />
	</bean>

	<!-- *************************从oa抓取数据***************************** -->
	<!-- Cron式Trigger定义 -->
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<!-- JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
			<bean id="JobDetajil" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="transferOaDataToGx" />
				<property name="targetMethod" value="getDataFromOA" />
				<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
				<property name="concurrent" value="false" />
			</bean>
		</property>
		<!-- 周一至五,朝九晚五工作时间内每半小时执行一次 -->
		<property name="cronExpression" value="0 0 1 ? * *" />
	</bean>
	<!-- *************************从oa抓取数据***************************** -->

</beans>
